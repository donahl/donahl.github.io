abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_TX, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
performance(mlm.fit)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp*NoCC*AvgVisibility)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp*NoCC)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~NoCC)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~NoCC*AvgTemp)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AllEvents, "All Events")
#mlm_plot(dataset_ALL, NegEvents, "NegEvents")
#mlm_plot(dataset_ALL, PosEvents+NegEvents, "AllEvents")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
View(weather_NY)
View(weather_NY)
View(weather_IL_cc)
View(weather_IL_cc)
View(dataset_CA)
View(dataset_CA)
View(dataset_IL)
View(dataset_IL)
View(dataset_NY)
View(dataset_NY)
View(dataset_IL)
View(dataset_IL)
View(dataset_NY)
View(dataset_NY)
View(dataset_TX)
View(dataset_TX)
View(dataset_CA)
View(dataset_CA)
View(dataset_IL)
View(dataset_IL)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_CA, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_NY, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_IL, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~NoCC)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_IL, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_IL, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_NY, AllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
#dataset_ALL = rbind(dataset_ALL,dataset_TX) - exlude Texas because it has inverse correlation
dataset_ALL[AdjAllEvents] =
if (State == 'California') { AllEvents * .64
} else if  (State == 'Illinois') { AllEvents * 2.2
} else if  (State == 'New York') { AllEvents * 1.33
} else if  (State == 'Texas') { AllEvents * .83 }
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
#dataset_ALL = rbind(dataset_ALL,dataset_TX) - exlude Texas because it has inverse correlation
attach(dataset_ALL)
dataset_ALL[AdjAllEvents] =
if (State == 'California') { AllEvents * .64
} else if  (State == 'Illinois') { AllEvents * 2.2
} else if  (State == 'New York') { AllEvents * 1.33
} else if  (State == 'Texas') { AllEvents * .83 }
#gdelt = read.csv('Gdelt_data.csv')
gdelt = read.csv('Gdelt_data_with_adj.csv')
attach(gdelt)
gdelt["Year"] = as.numeric(substr(as.character(MonthYear),1,4))
gdelt["Month"] = as.numeric(substr(as.character(MonthYear),5,6))
gdelt["PosEvents"] <- Verbal.Cooperation+Material.Cooperation
gdelt["NegEvents"] <- Verbal.Conflict+Material.Conflict
attach(gdelt)
gdelt["AllEvents"] <- PosEvents + NegEvents
View(gdelt)
View(gdelt)
combine_weather_and_gdelt <- function (state_data,state_name) {
attach(gdelt)
gdelt_state_data = gdelt %>%
select (Year, Month, PosEvents, NegEvents, AllEvents,AdjAllEvents) %>% filter(State == state_name)
merge_ds =
left_join(state_data, gdelt_state_data,
by = join_by(Year == Year, Month == Month))
return(merge_ds)
}
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
#dataset_ALL = rbind(dataset_ALL,dataset_TX) - exlude Texas because it has inverse correlation
#attach(dataset_ALL)
#dataset_ALL[AdjAllEvents] =
#  if (State == 'California') { AllEvents * .64
#  } else if  (State == 'Illinois') { AllEvents * 2.2
#  } else if  (State == 'New York') { AllEvents * 1.33
#  } else if  (State == 'Texas') { AllEvents * .83 }
View(dataset_ALL)
View(dataset_ALL)
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AdjAllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AdjAllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp*NoCC)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AdjAllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm_plot <- function(ds,y,title) {
# run the model and plot
attach(ds)
mlm.fit=lm(y~AvgTemp+NoCC)
#mlm.fit=lm(y~AvgTemp+NoCC+AvgVisibility)
#par(mfrow=c(3,3), oma = c(0,0,4,0))
#check_model(mlm.fit)
par(mfrow=c(2,2), oma = c(0,0,4,0))
plot(mlm.fit,pch=20, cex=.8, col="steelblue", )
#title(main = title, outer=TRUE, line=-1)
# plote each of the regression line
par(mfrow=c(2,2))
lm.fit_CC =lm(y~NoCC, data=ds)
plot(y~NoCC, data=ds, pch=19, cex=.8, col="steelblue", main='NoCC', cex.main=1)
abline(lm.fit_CC,lwd=1,col="red")
lm.fit_AT =lm(y~AvgTemp, data=ds)
plot(y~AvgTemp, data=ds, pch=19, cex=.8, col="steelblue", main='AvgTemp', cex.main=1)
abline(lm.fit_AT,lwd=1,col="red")
lm.fit_AV =lm(y~AvgVisibility, data=ds)
plot(y~AvgVisibility, data=ds, pch=19, cex=.8, col="steelblue", main='AvgVisibility', cex.main=1)
abline(lm.fit_AV,lwd=1,col="red")
# Uses coefplot to plot coefficients.  Note the line at 0.
arm::coefplot(mlm.fit)
summary(mlm.fit)
#confint(mlm.fit)
# this needs a big plot area to render
#performance(mlm.fit)
}
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AdjAllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
mlm.fit=lm(AdjAllEvents~AvgTemp+NoCC, data=dataset_ALL)
performance(mlm.fit)
performance(mlm.fit)
performance(mlm.fit)
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
dataset_ALL = rbind(dataset_ALL,dataset_TX) - exlude Texas because it has inverse correlation
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
dataset_ALL = rbind(dataset_ALL,dataset_TX) #- exlude Texas because it has inverse correlation
#attach(dataset_ALL)
#dataset_ALL[AdjAllEvents] =
#  if (State == 'California') { AllEvents * .64
#  } else if  (State == 'Illinois') { AllEvents * 2.2
#  } else if  (State == 'New York') { AllEvents * 1.33
#  } else if  (State == 'Texas') { AllEvents * .83 }
#mlm_plot(dataset_TX, PosEvents, "PosEvents")
#mlm_plot(dataset_TX, NegEvents, "Negative Events")
mlm_plot(dataset_ALL, AdjAllEvents, "All Events")
#ggplot(radial,aes(y=NTAV,x=age,color=weight))+geom_point()+stat_smooth(method="lm",se=FALSE)
dataset_IL = combine_weather_and_gdelt(weather_IL,"USIL")
dataset_CA = combine_weather_and_gdelt(weather_CA,"USCA")
dataset_NY = combine_weather_and_gdelt(weather_NY,"USNY")
dataset_TX = combine_weather_and_gdelt(weather_TX,"USTX")
dataset_ALL = rbind(dataset_IL,dataset_CA)
dataset_ALL = rbind(dataset_ALL,dataset_NY)
#dataset_ALL = rbind(dataset_ALL,dataset_TX) #- exlude Texas because it has inverse correlation
#attach(dataset_ALL)
#dataset_ALL[AdjAllEvents] =
#  if (State == 'California') { AllEvents * .64
#  } else if  (State == 'Illinois') { AllEvents * 2.2
#  } else if  (State == 'New York') { AllEvents * 1.33
#  } else if  (State == 'Texas') { AllEvents * .83 }
lm_metrics(dataset_TX,NoCC,PosEvents)
#lm_metrics(dataset_TX,AvgTemp,PosEvents)
#lm_metrics(dataset_TX,AvgVisibility,PosEvents)
lm_metrics(dataset_TX,NoCC,AllEvents)
#lm_metrics(dataset_TX,AvgTemp,PosEvents)
#lm_metrics(dataset_TX,AvgVisibility,PosEvents)
#lm_metrics(dataset_TX,NoCC,AllEvents)
lm_metrics(dataset_TX,AvgTemp,PosEvents)
#lm_metrics(dataset_TX,AvgVisibility,PosEvents)
#lm_metrics(dataset_TX,NoCC,AllEvents)
lm_metrics(dataset_TX,AvgTemp,AllEvents)
#lm_metrics(dataset_TX,AvgVisibility,PosEvents)
View(dataset_ALL)
View(dataset_ALL)
